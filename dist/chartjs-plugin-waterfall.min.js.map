{"version":3,"file":"chartjs-plugin-waterfall.min.js","sources":["../src/drawStepLines.js","../src/index.js"],"sourcesContent":["import groupBy from 'lodash.groupby';\n\nexport default (chart) => {\n  const context = chart.ctx;\n  const datasets = chart.data.datasets;\n  const options = chart.options.plugins.waterFallPlugin.stepLines;\n  const stackedDatasets = groupBy(datasets, 'stack');\n  const newDatasets = [];\n  const getModel = (dataset) => {\n    const firstKey = Object.keys(dataset._meta)[0];\n\n    return dataset._meta[firstKey].data[0]._model;\n  };\n\n  Object.keys(stackedDatasets).forEach((key) => {\n    const currentStackedDataset = stackedDatasets[key];\n    const firstRealModel = getModel(currentStackedDataset.find(x => !x.dummyStack));\n    const firstModel = getModel(currentStackedDataset[0]);\n    const lastModel = getModel(currentStackedDataset[currentStackedDataset.length - 1]);\n\n    newDatasets.push({\n      stackRightXPos: firstModel.x + (firstModel.width / 2),\n      stackLeftXPos: firstModel.x - (firstModel.width / 2),\n      stackRealBottomYPos: firstRealModel.base,\n      stackBottomYPos: firstModel.base,\n      stackTopYPos: lastModel.y,\n    });\n  });\n\n  for (let i = 0; i < newDatasets.length; i += 1) {\n    const firstDataSet = newDatasets[i];\n\n    if (i !== newDatasets.length - 1) {\n      const secondDataSet = newDatasets[i + 1];\n\n      // Needed to convert step lines to look like bars when we have floating stacks\n      if (firstDataSet.stackTopYPos === secondDataSet.stackRealBottomYPos) {\n        secondDataSet.stackTopYPos = secondDataSet.stackRealBottomYPos;\n      } else if (firstDataSet.stackRealBottomYPos === secondDataSet.stackTopYPos) {\n        firstDataSet.stackTopYPos = firstDataSet.stackRealBottomYPos;\n      }\n\n      // Gradient from top of second box to bottom of both boxes\n      const gradient = context.createLinearGradient(\n        0,\n        secondDataSet.stackTopYPos,\n        0,\n        secondDataSet.stackBottomYPos,\n      );\n\n      gradient.addColorStop(options.startColorStop, options.startColor);\n      gradient.addColorStop(options.endColorStop, options.endColor);\n\n      context.fillStyle = gradient;\n\n      context.beginPath();\n      // top right of first box\n      context.lineTo(firstDataSet.stackRightXPos, firstDataSet.stackTopYPos);\n      // top left of second box\n      context.lineTo(secondDataSet.stackLeftXPos, secondDataSet.stackTopYPos);\n      // bottom left of second box\n      context.lineTo(secondDataSet.stackLeftXPos, secondDataSet.stackBottomYPos);\n      // bottom right of first box\n      context.lineTo(firstDataSet.stackRightXPos, firstDataSet.stackBottomYPos);\n      context.fill();\n    }\n  }\n};\n","import merge from 'lodash.merge';\n\nimport drawStepLines from './drawStepLines';\n\nconst defaultOptions = {\n  waterFallPlugin: {\n    stepLines: {\n      enabled: true,\n      startColorStop: 0,\n      endColorStop: 0.6,\n      startColor: 'rgba(0, 0, 0, 0.55)', // opaque\n      endColor: 'rgba(0, 0, 0, 0)', // transparent\n    },\n  },\n};\n\nconst status = {};\n\nconst filterDummyStacks = (legendItem, chartData) => {\n  const currentDataset = chartData.datasets[legendItem.datasetIndex];\n\n  return !currentDataset.dummyStack;\n};\n\nconst waterFallPlugin = {\n  beforeInit: (chart) => {\n    status[chart.id] = {\n      readyToDrawStepLines: false,\n    };\n  },\n  afterInit: (chart) => {\n    chart.options.plugins = merge({}, defaultOptions, chart.options.plugins);\n    chart.options.tooltips.filter = filterDummyStacks;\n    chart.options.legend.labels.filter = filterDummyStacks;\n\n    // Can't override onComplete function because it gets overwridden if user using React\n    setTimeout(() => {\n      status[chart.id].readyToDrawStepLines = true;\n\n      drawStepLines(chart);\n    }, chart.options.animation.duration);\n\n\n    chart.data.datasets.forEach((dataset, i) => {\n      // Each dataset must have a unique label so we set the dummy stacks to have dummy labels\n      if (dataset.dummyStack) {\n        dataset.label = `dummyStack_${i}`;\n        dataset.backgroundColor = 'rgba(0, 0, 0, 0)';\n      }\n    });\n  },\n  afterDraw: (chart) => {\n    const options = chart.options.plugins.waterFallPlugin;\n\n    if (options.stepLines.enabled &&\n        status[chart.id].readyToDrawStepLines) {\n      drawStepLines(chart);\n    }\n  },\n};\n\nexport default waterFallPlugin;\n"],"names":["chart","context","ctx","datasets","data","options","plugins","waterFallPlugin","stepLines","stackedDatasets","groupBy","newDatasets","getModel","dataset","firstKey","Object","keys","_meta","_model","forEach","key","currentStackedDataset","firstRealModel","find","x","dummyStack","firstModel","lastModel","length","push","width","base","y","i","firstDataSet","secondDataSet","stackTopYPos","stackRealBottomYPos","gradient","createLinearGradient","stackBottomYPos","addColorStop","startColorStop","startColor","endColorStop","endColor","fillStyle","beginPath","lineTo","stackRightXPos","stackLeftXPos","fill","defaultOptions","status","filterDummyStacks","legendItem","chartData","datasetIndex","id","merge","tooltips","filter","legend","labels","readyToDrawStepLines","animation","duration","label","backgroundColor","enabled"],"mappings":"wYAEA,eAAgBA,OACRC,EAAUD,EAAME,IAChBC,EAAWH,EAAMI,KAAKD,SACtBE,EAAUL,EAAMK,QAAQC,QAAQC,gBAAgBC,UAChDC,EAAkBC,EAAQP,EAAU,SACpCQ,KACAC,EAAW,SAACC,OACVC,EAAWC,OAAOC,KAAKH,EAAQI,OAAO,UAErCJ,EAAQI,MAAMH,GAAUV,KAAK,GAAGc,eAGlCF,KAAKP,GAAiBU,QAAQ,SAACC,OAC9BC,EAAwBZ,EAAgBW,GACxCE,EAAiBV,EAASS,EAAsBE,KAAK,mBAAMC,EAAEC,cAC7DC,EAAad,EAASS,EAAsB,IAC5CM,EAAYf,EAASS,EAAsBA,EAAsBO,OAAS,MAEpEC,qBACMH,EAAWF,EAAKE,EAAWI,MAAQ,gBACpCJ,EAAWF,EAAKE,EAAWI,MAAQ,sBAC7BR,EAAeS,qBACnBL,EAAWK,kBACdJ,EAAUK,UAIvB,IAAIC,EAAI,EAAGA,EAAItB,EAAYiB,OAAQK,GAAK,EAAG,KACxCC,EAAevB,EAAYsB,MAE7BA,IAAMtB,EAAYiB,OAAS,EAAG,KAC1BO,EAAgBxB,EAAYsB,EAAI,GAGlCC,EAAaE,eAAiBD,EAAcE,sBAChCD,aAAeD,EAAcE,oBAClCH,EAAaG,sBAAwBF,EAAcC,iBAC/CA,aAAeF,EAAaG,yBAIrCC,EAAWrC,EAAQsC,qBACvB,EACAJ,EAAcC,aACd,EACAD,EAAcK,mBAGPC,aAAapC,EAAQqC,eAAgBrC,EAAQsC,cAC7CF,aAAapC,EAAQuC,aAAcvC,EAAQwC,YAE5CC,UAAYR,IAEZS,cAEAC,OAAOd,EAAae,eAAgBf,EAAaE,gBAEjDY,OAAOb,EAAce,cAAef,EAAcC,gBAElDY,OAAOb,EAAce,cAAef,EAAcK,mBAElDQ,OAAOd,EAAae,eAAgBf,EAAaM,mBACjDW,UC5DRC,wCAGS,iBACO,eACF,cACF,+BACF,sBAKVC,KAEAC,EAAoB,SAACC,EAAYC,UACdA,EAAUrD,SAASoD,EAAWE,cAE9BhC,8BAIX,SAACzB,KACJA,EAAM0D,2BACW,cAGf,SAAC1D,KACJK,QAAQC,QAAUqD,KAAUP,EAAgBpD,EAAMK,QAAQC,WAC1DD,QAAQuD,SAASC,OAASP,IAC1BjD,QAAQyD,OAAOC,OAAOF,OAASP,aAG1B,aACFtD,EAAM0D,IAAIM,sBAAuB,IAE1BhE,IACbA,EAAMK,QAAQ4D,UAAUC,YAGrB9D,KAAKD,SAASgB,QAAQ,SAACN,EAASoB,GAEhCpB,EAAQY,eACF0C,oBAAsBlC,IACtBmC,gBAAkB,iCAIrB,SAACpE,GACMA,EAAMK,QAAQC,QAAQC,gBAE1BC,UAAU6D,SAClBhB,EAAOrD,EAAM0D,IAAIM,wBACLhE"}