{"version":3,"file":"chartjs-plugin-waterfall.js","sources":["../src/drawStepLines.js","../src/index.js"],"sourcesContent":["export default (context, datasets, options) => {\n  const stackedDatasets = _.groupBy(datasets, 'stack');\n  const newDatasets = [];\n  const getModel = dataset => dataset._meta[0].data[0]._model;\n\n  Object.keys(stackedDatasets).forEach((key) => {\n    const currentStackedDataset = stackedDatasets[key];\n    const firstRealModel = getModel(currentStackedDataset.find(x => !x.dummyStack));\n    const firstModel = getModel(currentStackedDataset[0]);\n    const lastModel = getModel(currentStackedDataset[currentStackedDataset.length - 1]);\n\n    newDatasets.push({\n      stackRightXPos: firstModel.x + (firstModel.width / 2),\n      stackLeftXPos: firstModel.x - (firstModel.width / 2),\n      stackRealBottomYPos: firstRealModel.base,\n      stackBottomYPos: firstModel.base,\n      stackTopYPos: lastModel.y,\n    });\n  });\n\n  for (let i = 0; i < newDatasets.length; i += 1) {\n    const firstDataSet = newDatasets[i];\n\n    if (i !== newDatasets.length - 1) {\n      const secondDataSet = newDatasets[i + 1];\n\n      // Needed to convert step lines to look like bars when we have floating stacks\n      if (firstDataSet.stackTopYPos === secondDataSet.stackRealBottomYPos) {\n        secondDataSet.stackTopYPos = secondDataSet.stackRealBottomYPos;\n      } else if (firstDataSet.stackRealBottomYPos === secondDataSet.stackTopYPos) {\n        firstDataSet.stackTopYPos = firstDataSet.stackRealBottomYPos;\n      }\n\n      // Gradient from top of second box to bottom of both boxes\n      const gradient = context.createLinearGradient(\n        0,\n        secondDataSet.stackTopYPos,\n        0,\n        secondDataSet.stackBottomYPos,\n      );\n\n      gradient.addColorStop(options.startColorStop, options.startColor);\n      gradient.addColorStop(options.endColorStop, options.endColor);\n\n      context.fillStyle = gradient;\n\n      context.beginPath();\n      // top right of first box\n      context.lineTo(firstDataSet.stackRightXPos, firstDataSet.stackTopYPos);\n      // top left of second box\n      context.lineTo(secondDataSet.stackLeftXPos, secondDataSet.stackTopYPos);\n      // bottom left of second box\n      context.lineTo(secondDataSet.stackLeftXPos, secondDataSet.stackBottomYPos);\n      // bottom right of first box\n      context.lineTo(firstDataSet.stackRightXPos, firstDataSet.stackBottomYPos);\n      context.fill();\n    }\n  }\n};\n","import drawStepLines from './drawStepLines';\n\nconst waterFallPlugin = {\n  beforeInit: (chart) => {\n    chart.data.datasets.forEach((dataset, i) => {\n      // Each dataset must have a unique label so we set the dummy stacks to have dummy labels\n      dataset.label = !dataset.label ? `dummyStack_${i}` : dataset.label;\n      dataset.backgroundColor = dataset.dummyStack ? 'rgba(0, 0, 0, 0)' : dataset.backgroundColor;\n    });\n  },\n  afterDraw: (chart) => {\n    const options = chart.options.plugins.waterFallPlugin;\n    if (options.stepLines.enabled) {\n      drawStepLines(chart.ctx, chart.data.datasets, options.stepLines);\n    }\n\n    chart.update();\n  },\n};\n\nexport default waterFallPlugin;\n"],"names":["context","datasets","options","stackedDatasets","_","groupBy","newDatasets","getModel","dataset","_meta","data","_model","keys","forEach","key","currentStackedDataset","firstRealModel","find","x","dummyStack","firstModel","lastModel","length","push","width","base","y","i","firstDataSet","secondDataSet","stackTopYPos","stackRealBottomYPos","gradient","createLinearGradient","stackBottomYPos","addColorStop","startColorStop","startColor","endColorStop","endColor","fillStyle","beginPath","lineTo","stackRightXPos","stackLeftXPos","fill","waterFallPlugin","chart","label","backgroundColor","plugins","stepLines","enabled","ctx","update"],"mappings":";;;;;;AAAA,qBAAe,UAACA,OAAD,EAAUC,QAAV,EAAoBC,OAApB,EAAgC;MACvCC,kBAAkBC,EAAEC,OAAF,CAAUJ,QAAV,EAAoB,OAApB,CAAxB;MACMK,cAAc,EAApB;MACMC,WAAW,SAAXA,QAAW;WAAWC,QAAQC,KAAR,CAAc,CAAd,EAAiBC,IAAjB,CAAsB,CAAtB,EAAyBC,MAApC;GAAjB;;SAEOC,IAAP,CAAYT,eAAZ,EAA6BU,OAA7B,CAAqC,UAACC,GAAD,EAAS;QACtCC,wBAAwBZ,gBAAgBW,GAAhB,CAA9B;QACME,iBAAiBT,SAASQ,sBAAsBE,IAAtB,CAA2B;aAAK,CAACC,EAAEC,UAAR;KAA3B,CAAT,CAAvB;QACMC,aAAab,SAASQ,sBAAsB,CAAtB,CAAT,CAAnB;QACMM,YAAYd,SAASQ,sBAAsBA,sBAAsBO,MAAtB,GAA+B,CAArD,CAAT,CAAlB;;gBAEYC,IAAZ,CAAiB;sBACCH,WAAWF,CAAX,GAAgBE,WAAWI,KAAX,GAAmB,CADpC;qBAEAJ,WAAWF,CAAX,GAAgBE,WAAWI,KAAX,GAAmB,CAFnC;2BAGMR,eAAeS,IAHrB;uBAIEL,WAAWK,IAJb;oBAKDJ,UAAUK;KAL1B;GANF;;OAeK,IAAIC,IAAI,CAAb,EAAgBA,IAAIrB,YAAYgB,MAAhC,EAAwCK,KAAK,CAA7C,EAAgD;QACxCC,eAAetB,YAAYqB,CAAZ,CAArB;;QAEIA,MAAMrB,YAAYgB,MAAZ,GAAqB,CAA/B,EAAkC;UAC1BO,gBAAgBvB,YAAYqB,IAAI,CAAhB,CAAtB;;;UAGIC,aAAaE,YAAb,KAA8BD,cAAcE,mBAAhD,EAAqE;sBACrDD,YAAd,GAA6BD,cAAcE,mBAA3C;OADF,MAEO,IAAIH,aAAaG,mBAAb,KAAqCF,cAAcC,YAAvD,EAAqE;qBAC7DA,YAAb,GAA4BF,aAAaG,mBAAzC;;;;UAIIC,WAAWhC,QAAQiC,oBAAR,CACf,CADe,EAEfJ,cAAcC,YAFC,EAGf,CAHe,EAIfD,cAAcK,eAJC,CAAjB;;eAOSC,YAAT,CAAsBjC,QAAQkC,cAA9B,EAA8ClC,QAAQmC,UAAtD;eACSF,YAAT,CAAsBjC,QAAQoC,YAA9B,EAA4CpC,QAAQqC,QAApD;;cAEQC,SAAR,GAAoBR,QAApB;;cAEQS,SAAR;;cAEQC,MAAR,CAAed,aAAae,cAA5B,EAA4Cf,aAAaE,YAAzD;;cAEQY,MAAR,CAAeb,cAAce,aAA7B,EAA4Cf,cAAcC,YAA1D;;cAEQY,MAAR,CAAeb,cAAce,aAA7B,EAA4Cf,cAAcK,eAA1D;;cAEQQ,MAAR,CAAed,aAAae,cAA5B,EAA4Cf,aAAaM,eAAzD;cACQW,IAAR;;;CAvDN;;ACEA,IAAMC,kBAAkB;cACV,oBAACC,KAAD,EAAW;UACfrC,IAAN,CAAWT,QAAX,CAAoBY,OAApB,CAA4B,UAACL,OAAD,EAAUmB,CAAV,EAAgB;;cAElCqB,KAAR,GAAgB,CAACxC,QAAQwC,KAAT,mBAA+BrB,CAA/B,GAAqCnB,QAAQwC,KAA7D;cACQC,eAAR,GAA0BzC,QAAQW,UAAR,GAAqB,kBAArB,GAA0CX,QAAQyC,eAA5E;KAHF;GAFoB;aAQX,mBAACF,KAAD,EAAW;QACd7C,UAAU6C,MAAM7C,OAAN,CAAcgD,OAAd,CAAsBJ,eAAtC;QACI5C,QAAQiD,SAAR,CAAkBC,OAAtB,EAA+B;oBACfL,MAAMM,GAApB,EAAyBN,MAAMrC,IAAN,CAAWT,QAApC,EAA8CC,QAAQiD,SAAtD;;;UAGIG,MAAN;;CAdJ;;;;;;;;"}