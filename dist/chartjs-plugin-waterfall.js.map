{"version":3,"file":"chartjs-plugin-waterfall.js","sources":["../src/drawStepLines.js","../src/index.js"],"sourcesContent":["import groupBy from 'lodash.groupby';\n\nexport default (chart) => {\n  const context = chart.ctx;\n  const datasets = chart.data.datasets;\n  const options = chart.options.plugins.waterFallPlugin.stepLines;\n  const stackedDatasets = groupBy(datasets, 'stack');\n  const newDatasets = [];\n  const getModel = (dataset) => {\n    const firstKey = Object.keys(dataset._meta)[0];\n\n    return dataset._meta[firstKey].data[0]._model;\n  };\n\n  Object.keys(stackedDatasets).forEach((key) => {\n    const currentStackedDataset = stackedDatasets[key];\n    const firstRealModel = getModel(currentStackedDataset.find(x => !x.dummyStack));\n    const firstModel = getModel(currentStackedDataset[0]);\n    const lastModel = getModel(currentStackedDataset[currentStackedDataset.length - 1]);\n\n    newDatasets.push({\n      stackRightXPos: firstModel.x + (firstModel.width / 2),\n      stackLeftXPos: firstModel.x - (firstModel.width / 2),\n      stackRealBottomYPos: firstRealModel.base,\n      stackBottomYPos: firstModel.base,\n      stackTopYPos: lastModel.y,\n    });\n  });\n\n  for (let i = 0; i < newDatasets.length; i += 1) {\n    const firstDataSet = newDatasets[i];\n\n    if (i !== newDatasets.length - 1) {\n      const secondDataSet = newDatasets[i + 1];\n\n      // Needed to convert step lines to look like bars when we have floating stacks\n      if (firstDataSet.stackTopYPos === secondDataSet.stackRealBottomYPos) {\n        secondDataSet.stackTopYPos = secondDataSet.stackRealBottomYPos;\n      } else if (firstDataSet.stackRealBottomYPos === secondDataSet.stackTopYPos) {\n        firstDataSet.stackTopYPos = firstDataSet.stackRealBottomYPos;\n      }\n\n      // Gradient from top of second box to bottom of both boxes\n      const gradient = context.createLinearGradient(\n        0,\n        secondDataSet.stackTopYPos,\n        0,\n        secondDataSet.stackBottomYPos,\n      );\n\n      gradient.addColorStop(options.startColorStop, options.startColor);\n      gradient.addColorStop(options.endColorStop, options.endColor);\n\n      context.fillStyle = gradient;\n\n      context.beginPath();\n      // top right of first box\n      context.lineTo(firstDataSet.stackRightXPos, firstDataSet.stackTopYPos);\n      // top left of second box\n      context.lineTo(secondDataSet.stackLeftXPos, secondDataSet.stackTopYPos);\n      // bottom left of second box\n      context.lineTo(secondDataSet.stackLeftXPos, secondDataSet.stackBottomYPos);\n      // bottom right of first box\n      context.lineTo(firstDataSet.stackRightXPos, firstDataSet.stackBottomYPos);\n      context.fill();\n    }\n  }\n};\n","import merge from 'lodash.merge';\n\nimport drawStepLines from './drawStepLines';\n\nconst defaultOptions = {\n  waterFallPlugin: {\n    stepLines: {\n      enabled: true,\n      startColorStop: 0,\n      endColorStop: 0.6,\n      startColor: 'rgba(0, 0, 0, 0.55)', // opaque\n      endColor: 'rgba(0, 0, 0, 0)', // transparent\n    },\n    _status: {\n      readyToDrawStepLines: false,\n    },\n  },\n};\n\nconst filterDummyStacks = (legendItem, chartData) => {\n  const currentDataset = chartData.datasets[legendItem.datasetIndex];\n\n  return !currentDataset.dummyStack;\n};\n\nconst waterFallPlugin = {\n  afterRender: (chart) => {\n    const onComplete = chart.options.animation.onComplete;\n\n    chart.options.animation.onComplete = (...args) => {\n      chart.options.plugins.waterFallPlugin._status.readyToDrawStepLines = true;\n\n      drawStepLines(chart);\n      onComplete(...args);\n    };\n  },\n  afterInit: (chart) => {\n    chart.options.plugins = merge({}, defaultOptions, chart.options.plugins);\n    chart.options.tooltips.filter = filterDummyStacks;\n    chart.options.legend.labels.filter = filterDummyStacks;\n\n    chart.data.datasets.forEach((dataset, i) => {\n      // Each dataset must have a unique label so we set the dummy stacks to have dummy labels\n      if (dataset.dummyStack) {\n        dataset.label = `dummyStack_${i}`;\n        dataset.backgroundColor = 'rgba(0, 0, 0, 0)';\n      }\n    });\n  },\n  afterDraw: (chart) => {\n    const options = chart.options.plugins.waterFallPlugin;\n\n    if (options.stepLines.enabled &&\n        options._status.readyToDrawStepLines) {\n      drawStepLines(chart);\n    }\n  },\n};\n\nexport default waterFallPlugin;\n"],"names":["chart","context","ctx","datasets","data","options","plugins","waterFallPlugin","stepLines","stackedDatasets","groupBy","newDatasets","getModel","dataset","firstKey","Object","keys","_meta","_model","forEach","key","currentStackedDataset","firstRealModel","find","x","dummyStack","firstModel","lastModel","length","push","width","base","y","i","firstDataSet","secondDataSet","stackTopYPos","stackRealBottomYPos","gradient","createLinearGradient","stackBottomYPos","addColorStop","startColorStop","startColor","endColorStop","endColor","fillStyle","beginPath","lineTo","stackRightXPos","stackLeftXPos","fill","defaultOptions","filterDummyStacks","legendItem","chartData","currentDataset","datasetIndex","onComplete","animation","_status","readyToDrawStepLines","merge","tooltips","filter","legend","labels","label","backgroundColor","enabled"],"mappings":"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"}