{"version":3,"file":"chartjs-plugin-waterfall.js","sources":["../src/drawStepLines.js","../src/index.js"],"sourcesContent":["import groupBy from 'lodash.groupby';\n\nexport default (context, datasets, options) => {\n  const stackedDatasets = groupBy(datasets, 'stack');\n  const newDatasets = [];\n  const getModel = dataset => dataset._meta[0].data[0]._model;\n\n  Object.keys(stackedDatasets).forEach((key) => {\n    const currentStackedDataset = stackedDatasets[key];\n    const firstRealModel = getModel(currentStackedDataset.find(x => !x.dummyStack));\n    const firstModel = getModel(currentStackedDataset[0]);\n    const lastModel = getModel(currentStackedDataset[currentStackedDataset.length - 1]);\n\n    newDatasets.push({\n      stackRightXPos: firstModel.x + (firstModel.width / 2),\n      stackLeftXPos: firstModel.x - (firstModel.width / 2),\n      stackRealBottomYPos: firstRealModel.base,\n      stackBottomYPos: firstModel.base,\n      stackTopYPos: lastModel.y,\n    });\n  });\n\n  for (let i = 0; i < newDatasets.length; i += 1) {\n    const firstDataSet = newDatasets[i];\n\n    if (i !== newDatasets.length - 1) {\n      const secondDataSet = newDatasets[i + 1];\n\n      // Needed to convert step lines to look like bars when we have floating stacks\n      if (firstDataSet.stackTopYPos === secondDataSet.stackRealBottomYPos) {\n        secondDataSet.stackTopYPos = secondDataSet.stackRealBottomYPos;\n      } else if (firstDataSet.stackRealBottomYPos === secondDataSet.stackTopYPos) {\n        firstDataSet.stackTopYPos = firstDataSet.stackRealBottomYPos;\n      }\n\n      // Gradient from top of second box to bottom of both boxes\n      const gradient = context.createLinearGradient(\n        0,\n        secondDataSet.stackTopYPos,\n        0,\n        secondDataSet.stackBottomYPos,\n      );\n\n      gradient.addColorStop(options.startColorStop, options.startColor);\n      gradient.addColorStop(options.endColorStop, options.endColor);\n\n      context.fillStyle = gradient;\n\n      context.beginPath();\n      // top right of first box\n      context.lineTo(firstDataSet.stackRightXPos, firstDataSet.stackTopYPos);\n      // top left of second box\n      context.lineTo(secondDataSet.stackLeftXPos, secondDataSet.stackTopYPos);\n      // bottom left of second box\n      context.lineTo(secondDataSet.stackLeftXPos, secondDataSet.stackBottomYPos);\n      // bottom right of first box\n      context.lineTo(firstDataSet.stackRightXPos, firstDataSet.stackBottomYPos);\n      context.fill();\n    }\n  }\n};\n","import merge from 'lodash.merge';\n\nimport drawStepLines from './drawStepLines';\n\nconst defaultOptions = {\n  waterFallPlugin: {\n    stepLines: {\n      enabled: true,\n      startColorStop: 0,\n      endColorStop: 0.6,\n      startColor: 'rgba(0, 0, 0, 0.55)', // opaque\n      endColor: 'rgba(0, 0, 0, 0)', // transparent\n    },\n  },\n};\n\nconst filterDummyStacks = (legendItem, chartData) => {\n  const currentDataset = chartData.datasets[legendItem.datasetIndex];\n\n  return !currentDataset.dummyStack;\n};\n\nconst waterFallPlugin = {\n  afterInit: (chart) => {\n    chart.options.tooltips.filter = filterDummyStacks;\n    chart.options.legend.labels.filter = filterDummyStacks;\n    chart.options.plugins = merge({}, defaultOptions, chart.options.plugins);\n    chart.data.datasets.forEach((dataset, i) => {\n      // Each dataset must have a unique label so we set the dummy stacks to have dummy labels\n      if (dataset.dummyStack) {\n        dataset.label = `dummyStack_${i}`;\n        dataset.backgroundColor = 'rgba(0, 0, 0, 0)';\n      }\n    });\n  },\n  afterDraw: (chart) => {\n    const options = chart.options.plugins.waterFallPlugin;\n\n    if (options.stepLines.enabled) {\n      drawStepLines(chart.ctx, chart.data.datasets, options.stepLines);\n    }\n  },\n};\n\nexport default waterFallPlugin;\n"],"names":["context","datasets","options","stackedDatasets","groupBy","newDatasets","getModel","dataset","_meta","data","_model","keys","forEach","key","currentStackedDataset","firstRealModel","find","x","dummyStack","firstModel","lastModel","length","push","width","base","y","i","firstDataSet","secondDataSet","stackTopYPos","stackRealBottomYPos","gradient","createLinearGradient","stackBottomYPos","addColorStop","startColorStop","startColor","endColorStop","endColor","fillStyle","beginPath","lineTo","stackRightXPos","stackLeftXPos","fill","defaultOptions","filterDummyStacks","legendItem","chartData","currentDataset","datasetIndex","waterFallPlugin","chart","tooltips","filter","legend","labels","plugins","merge","label","backgroundColor","stepLines","enabled","ctx"],"mappings":"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"}